/* Holy Grail Layout */
body {
  display: grid;
  grid-template-columns: 18rem 1fr;
  grid-template-rows: auto 1fr;
  height: 100vh;
}

header {
  grid-column: 1 / -1;
  background-color: var(--darkgrey);
  padding: 1rem;
  text-align: center;
}

aside {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
  background-color: var(--grey);
  padding: 1rem;
}

main {
  grid-column: 2 / -1;
  grid-row: 2 / 3;
  background-color: white;
}

input {
  border: none;
  border-bottom: 2px solid var(--grey);
  outline: none;
  margin-top: 0.5rem;
  margin-bottom: 2rem;
}

input:focus {
  border-bottom: 2px solid var(--darkgrey);
}

input[type="radio"]:hover, 
input[type="checkbox"]:hover {
  cursor: pointer;
}

input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: white;
  margin: 0;
  font: inherit;
  color: currentColor;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid currentColor;
  border-radius: 50%;
  transform: translateY(-0.075em);
  display: grid;
  place-content: center;
}

input[type="checkbox"]::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  transform: scale(0);
  border-radius: 50%;
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em var(--darkgrey);
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}

button {
  border-radius: 5px;
  border: none;
  background-color: transparent;
}

.empty {
  color: var(--darkgrey);
  text-align: center;
  margin: 1rem 0;
}

.text-muted {
  color: var(--darkgrey);
}

.radio-div {
  display: flex;
  gap: 1rem;
  margin-top: 0.5rem;
  margin-bottom: 2rem;
}

input[type="radio"] {
  appearance: none;
  margin: 0;
  width: 0;
  height: 0;
  display: none;
}

input[type="radio"] ~ label {
  display: block;
  padding: 0.5rem;
}

input[type="radio"]:checked ~ label {
  outline: 2px solid black;
}

/* Header styles */
.site-title {
  color: white;
}

/* Aside styles */
aside {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow-y: auto;
}

aside h3 {
  color: var(--darkblue);
}

aside div {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

aside div button {
  background-color: var(--grey);
  padding: 0.25rem 0.5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.add-project-btn {
  margin-top: auto;
  background-color: var(--darkred);
  color: white;
}

.add-project-btn:hover {
  background-color: var(--lightred);
  cursor: pointer;
}

aside div button:hover {
  background-color: var(--darkblue);
  color: white;
  cursor: pointer;
}

.active {
  background-color: var(--darkblue);
  color: white;
}

/* Dialog modal styles */
dialog > * {
  margin-bottom: 1rem;
}

dialog form {
  display: flex;
  flex-direction: column;
  margin-top: 2rem;
}

dialog form button {
  background-color: var(--darkblue);
  color: white;
  width: 50%;
  margin-left: auto;
  margin-top: 1rem;
}

dialog form button:hover {
  cursor: pointer;
  background-color: var(--lightblue);
}

dialog .close {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  color: var(--darkred);
}

dialog .close:hover {
  cursor: pointer;
  background-color: var(--darkred);
  color: white;
}

/*   Open state of the dialog  */
dialog[open] {
  opacity: 1;
  transform: scale(1);
}

/*   Closed state of the dialog   */
dialog {
  position: relative;
  width: calc(20vw + 20rem);
  opacity: 0;
  margin: auto;
  padding: 2rem;
  transform: scale(0.8);
  border: none;
  border-radius: 5px;
  box-shadow: 0 5px 15px 0 var(--darkgrey);
  transition:
    opacity 0.2s ease-out,
    transform 0.2s ease-out,
    overlay 0.2s ease-out allow-discrete,
    display 0.2s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scale(0.8);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.2s allow-discrete,
    overlay 0.2s allow-discrete,
    background-color 0.2s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */
@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

/* Main content styles */
main {
  padding: 4rem;
  overflow-y: auto;
  position: relative;
}

main > h1 {
  border-bottom: 2px solid var(--grey);
  padding-bottom: 1rem;
}

/* Todo styles */
.todo {
  transition: 0.25s all ease-out;
}

.todo {
  display: flex;
  gap: 1rem;
  align-items: center;
  padding: 1rem;
  height: 82px;
  border-bottom: 2px solid var(--grey);
  transition: 0.2s all linear;
}

.todo label:hover {
  cursor: pointer;
}

.todo:last-child {
  border-bottom: none;
}

.todo input[type="checkbox"]:checked ~ div > .name {
  text-decoration: line-through;
}

.todo-inner {
  flex-grow: 1;
}

.todo-description {
  opacity: 0;
  visibility: hidden;
  height: 0;
}

.todo .date {
  color: var(--darkblue);
}

.todo .project {
  color: var(--darkred)
}

.todo-inner-btn {
  font-size: 1.5rem;
}

.todo-inner-btn:hover {
  background-color: var(--darkblue);
  color: white;
  cursor: pointer;
}

.add-todo-btn {
  background-color: var(--darkgrey);
  color: white;
  position: absolute;
  top: 5rem;
  right: 4rem;
}

.add-todo-btn:hover {
  background-color: black;
  cursor: pointer;
}

.low {
  border-left: 2px solid green;
}

.medium {
  border-left: 2px solid orange;
}

.high {
  border-left: 2px solid red;
}

#low-priority-label {
  background-color: green;
  color: white;
}

#medium-priority-label {
  background-color: orange;
  color: white;
}

#high-priority-label {
  background-color: red;
  color: white;
}

.removed-todo {
  height: 0;
  overflow-y: hidden;
  visibility: hidden;
}

/* Media queries */
@media screen and (max-width: 1024px) {
  html {
    font-size: 14px;
  }

  body {
    grid-template-columns: 12rem 1fr;
  }
}